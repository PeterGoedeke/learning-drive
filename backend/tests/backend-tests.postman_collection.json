{
	"info": {
		"_postman_id": "8e568b07-c0f8-406f-8444-c37063f5f408",
		"name": "backend-tests",
		"description": "Learning drive application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "posts",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a valid post.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"OK response and body\", () => {",
											"    pm.response.to.have.status(200)",
											"    pm.response.to.have.body()",
											"",
											"})",
											"",
											"pm.test(\"post content and tags\", () => {",
											"    const responseJson = pm.response.json()",
											"    pm.expect(responseJson.content).to.eq(\"Hello, this is my first post! I am Peter!\") ",
											"    pm.expect(responseJson.categories.length).to.eq(2)",
											"",
											"})",
											"",
											"pm.test(\"post user info\", () => {",
											"    pm.expect(pm.response.json().user.handle).to.eq(\"Peter1\")",
											"    ",
											"})",
											"",
											"pm.test(\"post reaction info\", () => {",
											"    pm.expect(pm.response.json().reactions.isPersonallyLiked).to.eq(false)",
											"    pm.expect(pm.response.json().reactions.likes).to.eq(2)",
											"    ",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Get detailed information about a post."
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "http://localhost:5000/posts/:id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": 5,\n  \"user\": {\n    \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n    \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n    \"name\": \"Peter Goedeke\",\n    \"handle\": \"Peter#5678\"\n  },\n  \"timestampCreated\": 1646339331193,\n  \"timestampModified\": 1646339331193,\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"reactions\": {\n    \"likes\": 52,\n    \"isPersonallyLiked\": false\n  },\n  \"resource\": {\n    \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n    \"openGraph\": {\n      \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n      \"url\": \"https://github.com/PeterGoedeke/blocked\",\n      \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n      \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n    }\n  }\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "Get an invalid post.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"post not found\", () => {",
											"    pm.response.to.have.status(404)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "101",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Get detailed information about a post."
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "http://localhost:5000/posts/:id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": 5,\n  \"user\": {\n    \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n    \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n    \"name\": \"Peter Goedeke\",\n    \"handle\": \"Peter#5678\"\n  },\n  \"timestampCreated\": 1646339331193,\n  \"timestampModified\": 1646339331193,\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"reactions\": {\n    \"likes\": 52,\n    \"isPersonallyLiked\": false\n  },\n  \"resource\": {\n    \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n    \"openGraph\": {\n      \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n      \"url\": \"https://github.com/PeterGoedeke/blocked\",\n      \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n      \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n    }\n  }\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "edit a post.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"edit post\", () => {",
											"    pm.response.to.have.status(204)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    \"C++\"\n  ],\n  \"content\": \"awoooooooooo\",\n  \"resource\": \"https://testingtesting.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Change the content of one of your own posts"
							},
							"response": [
								{
									"name": "The put was applied successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "edit an invalid post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Edit someone else's post\", () => {",
											"    pm.response.to.have.status(403)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    \"C++\"\n  ],\n  \"content\": \"awoooooooooo\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Change the content of one of your own posts"
							},
							"response": [
								{
									"name": "The put was applied successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "edit a post 4 categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"check 4 categories\", () => {",
											"    pm.response.to.have.status(400)",
											"",
											"    pm.expect(pm.response.json().error.errors[0].message).to.eq(\"should NOT have more than 3 items\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"Java\",\n    \"JavaScript\",\n    \"React\"\n  ],\n  \"content\": \"awoooooooooo\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Change the content of one of your own posts"
							},
							"response": [
								{
									"name": "The put was applied successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "edit a post 0 categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"check 0 categories\", () => {",
											"    pm.response.to.have.status(204)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n  ],\n  \"content\": \"awoooooooooo\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Change the content of one of your own posts"
							},
							"response": [
								{
									"name": "The put was applied successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "edit a post content less than 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"check shorter than 10 chars\", () => {",
											"    pm.response.to.have.status(400)",
											"",
											"    pm.expect(pm.response.json().error.errors[0].message).to.eq(\"should NOT be shorter than 10 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    \"C++\"\n  ],\n  \"content\": \"awo\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Change the content of one of your own posts"
							},
							"response": [
								{
									"name": "The put was applied successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "React to a post.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"check like post\", () => {",
											"    pm.response.to.have.status(204)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"liked\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Add or remove your reaction to a post (currently, whether you have liked the post or not)"
							},
							"response": [
								{
									"name": "The patch was applied successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "Unreact to a post.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"unreact to a post\", () => {",
											"    pm.response.to.have.status(204)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"liked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Add or remove your reaction to a post (currently, whether you have liked the post or not)"
							},
							"response": [
								{
									"name": "The patch was applied successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "React to an invalid post.",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"liked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Add or remove your reaction to a post (currently, whether you have liked the post or not)"
							},
							"response": [
								{
									"name": "The patch was applied successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "Unreact to an unliked post",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"liked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22",
											"description": "(Required) The id of the object in the path"
										}
									]
								},
								"description": "Add or remove your reaction to a post (currently, whether you have liked the post or not)"
							},
							"response": [
								{
									"name": "The patch was applied successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The server failed to parse the request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid request.\"\n}"
								},
								{
									"name": "The requested resource was not found at the URI.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liked\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3",
													"description": "(Required) The id of the object in the path"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create a post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"yeet\",\n    \"yote\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						},
						"description": "Create a post"
					},
					"response": [
						{
							"name": "Successfully created the post",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "consequat tempor elit",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The server failed to parse the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    \"C++\",\n    \"C++\",\n    \"C++\"\n  ],\n  \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n  \"resource\": \"https://en.cppreference.com/w/cpp/language/value_category\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Invalid request.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "categories",
			"item": [
				{
					"name": "Create a category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create a new category\", () => {",
									"    pm.response.to.have.status(201)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category\": \"swift\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Create a category"
					},
					"response": [
						{
							"name": "Successfully created the category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "consequat tempor elit",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"TypeScript\"\n}"
						},
						{
							"name": "The server failed to parse the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Invalid request.\"\n}"
						}
					]
				},
				{
					"name": "Create a duplicate category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create a new category\", () => {",
									"    pm.response.to.have.status(201)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category\": \"swift\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Create a category"
					},
					"response": [
						{
							"name": "Successfully created the category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "consequat tempor elit",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"TypeScript\"\n}"
						},
						{
							"name": "The server failed to parse the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Invalid request.\"\n}"
						}
					]
				},
				{
					"name": "Create a category with 21 chars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check lesser more than 20 chars\", () => {",
									"    pm.response.to.have.status(400)",
									"",
									"    pm.expect(pm.response.json().error.errors[0].message).to.eq(\"should NOT be longer than 20 characters\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category\": \"123456789123456789123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Create a category"
					},
					"response": [
						{
							"name": "Successfully created the category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "consequat tempor elit",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"TypeScript\"\n}"
						},
						{
							"name": "The server failed to parse the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Invalid request.\"\n}"
						}
					]
				},
				{
					"name": "Create a category with 0 chars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check lesser 0 chars\", () => {",
									"    pm.response.to.have.status(400)",
									"",
									"    pm.expect(pm.response.json().error.errors[0].message).to.eq(\"should NOT be less than 1 characters\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Create a category"
					},
					"response": [
						{
							"name": "Successfully created the category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "consequat tempor elit",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"TypeScript\"\n}"
						},
						{
							"name": "The server failed to parse the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"C++\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Invalid request.\"\n}"
						}
					]
				},
				{
					"name": "Get categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check 6 categories exist\", () => {",
									"    pm.response.to.have.status(200)",
									"",
									"    pm.expect(pm.response.json().categories.length).to.eql(6)",
									"}) "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Get a list of all possible categories a post can be categorized under"
					},
					"response": [
						{
							"name": "The list of categories.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"categories\": [\n    \"C++\",\n    \"React\",\n    \"Redux\",\n    \"JavaScript\",\n    \"TypeScript\"\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Get posts SearchQuery",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"search by just SearchQuery\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eq(1)",
							"",
							"    pm.expect(pm.response.json().posts[0].content).to.eq(\"Hello, this is my first post! I am Peter, I love Java!\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"searchQuery\": \"Peter\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get posts Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"search by just categories\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eql(2)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"searchCategories\": [\"Java\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get Posts SearchQuery and Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"search by just SearchQuery\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eq(2)",
							"",
							"    pm.expect(pm.response.json().posts[0].content).to.eq(\"Hello, this is my first post! I am Peter, I love Java!\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"searchQuery\": \"Java\",\n    \"searchCategories\": [\"Java\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get posts SearchQuery, Categories, and userID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get post only be user\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eql(1)",
							"",
							"    pm.expect(pm.response.json().posts[0].content).to.eql(\"Ben is the best Java developer in the world!\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"searchContent\": \"Java\",\n    \"searchCategories\": [\"Java\"],\n    \"userIdQuery\": \"EaFbkHpMiNPGThNYAgKgiKYcgCJ2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get posts Categories and userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Category and userId\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eql(1)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"searchCategories\": [\"Java\"],\n    \"userIdQuery\": \"6edd1b55-4fc4-48a4-ba96-a161987fcfaa\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get posts SearchQuery and userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"SearchQuery and userId\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eql(1)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"searchQuery\": \"Java\",\n    \"userIdQuery\": \"6edd1b55-4fc4-48a4-ba96-a161987fcfaa\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get posts pagesize, no offset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"just pageSize of 1\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eql(1)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageSize\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get posts pagesize and pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"page size 2, offset 1\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().posts.length).to.eql(2)",
							"",
							"    pm.expect(pm.response.json().posts[0]._id).to.eql(4)",
							"    pm.expect(pm.response.json().posts[1]._id).to.eql(3)",
							"",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageSize\": 2,\n    \"offset\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/getPosts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"getPosts"
					]
				},
				"description": "Get posts for the various feeds. Request body fields allow for search and control of pagination."
			},
			"response": [
				{
					"name": "The list of posts.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"posts\": [\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    },\n    {\n      \"_id\": 5,\n      \"user\": {\n        \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n        \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n        \"name\": \"Peter Goedeke\",\n        \"handle\": \"Peter#5678\"\n      },\n      \"timestampCreated\": 1646339331193,\n      \"timestampModified\": 1646339331193,\n      \"categories\": [\n        \"C++\",\n        \"C++\",\n        \"C++\"\n      ],\n      \"content\": \"Today I learnt about the introduction of xvalues to value categories in C++\",\n      \"reactions\": {\n        \"likes\": 52,\n        \"isPersonallyLiked\": false\n      },\n      \"resource\": {\n        \"link\": \"https://en.cppreference.com/w/cpp/language/value_category\",\n        \"openGraph\": {\n          \"title\": \"GitHub - PeterGoedeke/blocked: https://blockedgame.live\",\n          \"url\": \"https://github.com/PeterGoedeke/blocked\",\n          \"description\": \"https://blockedgame.live. Contribute to PeterGoedeke/blocked development by creating an account on GitHub.\",\n          \"imageUrl\": \"https://repository-images.githubusercontent.com/422754120/03c53f9e-6306-4eb8-a2f4-6886041be39e\"\n        }\n      }\n    }\n  ]\n}"
				},
				{
					"name": "The server failed to parse the request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"searchQuery\": \"today I learned\",\n  \"searchCategories\": [\n    \"React\",\n    \"Redux\"\n  ],\n  \"userIdQuery\": \"7234a92f-185a-4e86-8276-54e3fa7b67c6\",\n  \"offset\": 2,\n  \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/getPosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPosts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Invalid request.\"\n}"
				}
			]
		},
		{
			"name": "Get a user.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get valid user by id\", () => {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json().handle).to.eql(\"Ben0\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "EaFbkHpMiNPGThNYAgKgiKYcgCJ2",
							"description": "(Required) The id of the object in the path"
						}
					]
				},
				"description": "Get detailed information about a user."
			},
			"response": [
				{
					"name": "Success.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) The id of the object in the path"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"user\": {\n    \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n    \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n    \"name\": \"Peter Goedeke\",\n    \"handle\": \"Peter#5678\"\n  },\n  \"followers\": [\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    },\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    }\n  ],\n  \"followerCount\": 2,\n  \"followed\": [\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    },\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    }\n  ],\n  \"followedCount\": 2\n}"
				},
				{
					"name": "The requested resource was not found at the URI.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) The id of the object in the path"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
				}
			]
		},
		{
			"name": "Get an invalid user.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"invalid user id\", () => {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "3",
							"description": "(Required) The id of the object in the path"
						}
					]
				},
				"description": "Get detailed information about a user."
			},
			"response": [
				{
					"name": "Success.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) The id of the object in the path"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"user\": {\n    \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n    \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n    \"name\": \"Peter Goedeke\",\n    \"handle\": \"Peter#5678\"\n  },\n  \"followers\": [\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    },\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    }\n  ],\n  \"followerCount\": 2,\n  \"followed\": [\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    },\n    {\n      \"_id\": \"6SZoYTBzY6ewF5Rkko7hi1QMF8C3\",\n      \"imageUrl\": \"https://firebase/learning-drive/cool-image.png\",\n      \"name\": \"Peter Goedeke\",\n      \"handle\": \"Peter#5678\"\n    }\n  ],\n  \"followedCount\": 2\n}"
				},
				{
					"name": "The requested resource was not found at the URI.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) The id of the object in the path"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Resource could not be found.\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		}
	]
}